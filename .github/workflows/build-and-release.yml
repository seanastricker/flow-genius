name: Build and Release

on:
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.0.0
  pull_request:
    branches: [ master ]
  workflow_dispatch: # Allow manual triggering

env:
  NODE_VERSION: '18'

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Type check
        run: npm run type-check
        
      - name: Lint
        run: npm run lint
        
      - name: Build application
        run: npm run build:vite
        
      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: |
            release/*.exe
            release/*.zip
            
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-builds
          path: |
            release/*.dmg
            release/*.zip
            
      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-builds
          path: |
            release/*.AppImage
            release/*.deb
            release/*.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-builds/*
            macos-builds/*
            linux-builds/*
          body: |
            ## BrainLift Generator ${{ github.ref_name }}
            
            ### What's New
            - Interactive Purpose Definition with AI assistance
            - Automated background research workflows
            - Real-time progress tracking
            - Document review and editing capabilities
            - Project integration with local file system
            
            ### Download Options
            
            **Windows:**
            - `BrainLift-Generator-*-x64.exe` - Windows 64-bit installer
            - `BrainLift-Generator-*-ia32.exe` - Windows 32-bit installer  
            - `BrainLift-Generator-*-x64.zip` - Portable version (no installation required)
            
            **macOS:**
            - `BrainLift-Generator-*-x64.dmg` - Intel Mac
            - `BrainLift-Generator-*-arm64.dmg` - Apple Silicon Mac
            
            **Linux:**
            - `BrainLift-Generator-*.AppImage` - Universal Linux (no installation required)
            - `BrainLift-Generator-*.deb` - Debian/Ubuntu package
            
            ### Setup Instructions
            1. Download the appropriate version for your operating system
            2. Install or run the application
            3. Get API keys from [OpenAI](https://platform.openai.com/api-keys) and [Tavily](https://app.tavily.com/)
            4. Launch the app and enter your API keys when prompted
            5. Start creating BrainLift documents!
            
            ### System Requirements
            - **Windows:** Windows 10 or higher (64-bit recommended)
            - **macOS:** macOS 10.15 or higher
            - **Linux:** Ubuntu 18.04+ or equivalent
            - **RAM:** 8GB minimum (16GB recommended)
            - **Storage:** 2GB free disk space
            - **Internet:** Required for research functionality
            
            ### Known Issues
            - First launch may take a few seconds longer than subsequent launches
            - Large research workflows may consume significant memory
            
            ### Support
            - üìñ [Documentation](https://github.com/${{ github.repository }}/blob/master/README.md)
            - üêõ [Report Issues](https://github.com/${{ github.repository }}/issues)
            - üí¨ [Discussions](https://github.com/${{ github.repository }}/discussions)
            
            **Full Changelog:** [${{ github.event.before }}...${{ github.sha }}](https://github.com/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.sha }})
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 